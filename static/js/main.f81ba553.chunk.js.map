{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["MovieCommon","styled","div","MovieData","MovieTitle","h3","MovieYear","h5","MovieSummary","p","MovieGenres","ul","Movie","id","year","title","summary","poster","genres","src","alt","map","genre","idx","slice","GlobalStyle","createGlobalStyle","Container","section","Loader","Movies","App","useState","isLoading","setisLoading","movies","setMoives","useEffect","getMovies","a","axios","get","data","className","movie","medium_cover_image","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0pDAIA,IAAMA,EAAcC,IAAOC,IAAV,KAwBXC,EAAYF,IAAOC,IAAV,KAOTE,EAAaH,IAAOI,GAAV,KAMVC,EAAYL,IAAOM,GAAV,KAKTC,EAAeP,IAAOQ,EAAV,KAGZC,EAAcT,IAAOU,GAAV,KAqCFC,MAzBf,YAA4D,EAA3CC,GAA4C,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC/C,OACI,eAAClB,EAAD,WACI,qBAAKmB,IAAKF,EAAQG,IAAKL,EAAOA,MAAOA,IACrC,eAACZ,EAAD,WACI,cAACC,EAAD,UAAaW,IACb,cAACT,EAAD,UAAYQ,IACZ,cAACJ,EAAD,UAAcQ,EAAOG,KAAI,SAACC,EAAOC,GAAR,OACrB,6BAAeD,GAANC,QAEb,eAACf,EAAD,WAAeQ,EAAQQ,MAAM,EAAE,KAA/B,gB,s3BClEhB,IAAMC,EAAcC,YAAH,KAWXC,EAAY1B,IAAO2B,QAAV,KAMTC,EAAS5B,IAAOC,IAAV,KASN4B,EAAS7B,IAAOC,IAAV,KA6DG6B,MAlDf,WAAgB,IAAD,EACqBC,oBAAS,GAD9B,mBACNC,EADM,KACKC,EADL,OAEeF,mBAAS,IAFxB,mBAENG,EAFM,KAEEC,EAFF,KAIbC,qBAAU,WAERC,MACA,IAQF,IAAMA,EAAS,uCAAG,4BAAAC,EAAA,sEACKC,IAAMC,IAAI,yDADf,OACVN,EADU,OAEhBC,EAAUD,EAAOO,KAAKA,KAAKP,QAC3BD,GAAa,GAHG,2CAAH,qDAMf,OACE,qCACA,cAACT,EAAD,IACA,cAACE,EAAD,UACGM,EACC,cAACJ,EAAD,UACE,sBAAMc,UAAY,cAAlB,0BAGF,cAACb,EAAD,UACGK,EAAOd,KAAI,SAAAuB,GAAK,OACf,cAAC,EAAD,CAEE/B,GAAI+B,EAAM/B,GACVC,KAAM8B,EAAM9B,KACZC,MAAO6B,EAAM7B,MACbC,QAAS4B,EAAM5B,QACfC,OAAQ2B,EAAMC,mBACd3B,OAAQ0B,EAAM1B,QANT0B,EAAM/B,eCvEzBiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f81ba553.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst MovieCommon = styled.div`\n    width: 45%;\n    background-color: white;\n    margin-bottom: 70px;\n    display : flex;\n    align-items : flex-start;\n    font-weight: 300;\n    padding: 20px;\n    border-radius: 5px;\n    color: #adaeb9;\n    box-shadow: 0 13px 27px -5px rgba(50, 50, 93, 0.25),\n        0 8px 16px -8px rgba(0, 0, 0, 0.3), 0 -6px 16px -6px rgba(0, 0, 0, 0.025);\n\n    img {\n        position: relative;\n        top: -50px;\n        max-width: 150px;\n        width: 100%;\n        margin-right: 30px;\n        box-shadow: 0 30px 60px -12px rgba(50, 50, 93, 0.25),\n          0 18px 36px -18px rgba(0, 0, 0, 0.3), 0 -12px 36px -8px rgba(0, 0, 0, 0.025);\n    }\n    `;\n\nconst MovieData = styled.div`\n    grid-template-columns: minmax(150px, 1fr) 2fr;\n    grid-gap: 20px;\n    text-decoration: none;\n    color: inherit\n`;\n\nconst MovieTitle = styled.h3`\n    margin-bottom: 5px;\n    font-size: 24px;\n    color: #2c2c2c;\n`;\n\nconst MovieYear = styled.h5`\n    margin : 0;\n    font-weight: 300;\n`;\n\nconst MovieSummary = styled.p`\n`;\n\nconst MovieGenres = styled.ul`\n    margin-top: 5px;\n    list-style: none;\n    padding: 0;\n    display : flex;\n\n    li {\n        margin-right : 10px;\n        font-size : 14px;\n    }\n`;\n\nfunction Movie({ id, year, title, summary, poster, genres}) {\n    return (\n        <MovieCommon>\n            <img src={poster} alt={title} title={title} />\n            <MovieData>\n                <MovieTitle>{title}</MovieTitle>\n                <MovieYear>{year}</MovieYear>\n                <MovieGenres>{genres.map((genre, idx) => (\n                    <li key={idx}>{genre}</li>))}\n                </MovieGenres>\n                <MovieSummary>{summary.slice(0,140)}...</MovieSummary>\n            </MovieData>\n        </MovieCommon>\n    );\n}\n\nMovie.propTypes = {\n    id : PropTypes.number.isRequired,\n    title : PropTypes.string.isRequired,\n    year : PropTypes.number.isRequired,\n    summary : PropTypes.string.isRequired,\n    poster : PropTypes.string.isRequired,\n    genres : PropTypes.arrayOf(PropTypes.string).isRequired,\n}\n\nexport default Movie;","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport Movie from \"./Movie\";\nimport styled, { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin : 0;\n    padding: 0;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\n    Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n    background-color : #eff3f7;\n    height : 100%;\n  }\n`;\n\nconst Container = styled.section`\n  height : 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Loader = styled.div`\n  width : 100%;\n  height : 100%;\n  display : flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: 300;  \n`;\n\nconst Movies = styled.div`\n  display : flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  flex-wrap: wrap;\n  padding : 50px;\n  padding-top : 70px;\n  width: 80%;\n`;\n\n \nfunction App() {\n  const [isLoading, setisLoading] = useState(true);\n  const [movies, setMoives] = useState([]);\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    getMovies();\n  },[]);\n\n  /*\n  API를 요청해 데이터를 가져오는데 걸리는 시간이 있기 때문에 비동기 함수로 만든다. \n  비동기 함수를 만들기위해서 함수를 async로 선언하고 함수안의 동작에 await를 부여했다.  \n  yts 사이트에서 요청하는 api로 주소가 매번 변경되므로 오류가 발생하면 주소를 찾아서 다시 입력해주자.\n  axios 동작이 끝나기를 기다려야하기 때문에 앞에 await를 붙여준다. \n  */\n  const getMovies = async () => {\n    const movies = await axios.get(\"https://yts.mx/api/v2/list_movies.json?sort_by=rating\");\n    setMoives(movies.data.data.movies);\n    setisLoading(false);\n  }\n \n  return (\n    <>\n    <GlobalStyle />\n    <Container>\n      {isLoading ? (\n        <Loader>\n          <span className = \"loader_text\">Loading...</span>\n        </Loader>\n      ) : (\n        <Movies>\n          {movies.map(movie => (\n            <Movie \n              key={movie.id}\n              id={movie.id}\n              year={movie.year} \n              title={movie.title} \n              summary={movie.summary} \n              poster={movie.medium_cover_image}\n              genres={movie.genres}\n            />\n          )\n        )}\n        </Movies>\n      )}\n      </Container>\n      </>\n  );\n}\n \nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}